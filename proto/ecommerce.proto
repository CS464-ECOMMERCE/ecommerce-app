syntax = "proto3";

package ecommerce;
// option go_package = "bistream/proto";
option go_package = "https://github.com/CS464-ECOMMERCE/ecommerce-app";

// -----------------Cart service-----------------

service CartService {
  rpc AddItem(AddItemRequest) returns (Empty) {}
  rpc GetCart(GetCartRequest) returns (Cart) {}
  rpc EmptyCart(EmptyCartRequest) returns (Empty) {}
  rpc RemoveItem(RemoveItemRequest) returns (Empty) {}
  rpc UpdateItemQuantity(UpdateItemQuantityRequest) returns (Empty) {}
}

message CartItem {
  uint64 id = 1;
  uint64 quantity = 2;
}

message AddItemRequest {
  string session_id = 1;
  CartItem item = 2;
}

message EmptyCartRequest { string session_id = 1; }

message GetCartRequest { string session_id = 1; }

message Cart {
  string session_id = 1;
  repeated CartItem items = 2;
}

message RemoveItemRequest {
  string session_id = 1;
  uint64 id = 2;
}

message UpdateItemQuantityRequest {
  string session_id = 1;
  uint64 id = 2;
  uint64 quantity = 3;
}

message Empty {}

// -----------------Product service-----------------

service ProductService {
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse) {}
  rpc GetProduct(GetProductRequest) returns (Product) {}
  rpc CreateProduct(CreateProductRequest) returns (Product) {}
  rpc DeleteProduct(DeleteProductRequest) returns (Empty) {}
  rpc UpdateProduct(UpdateProductRequest) returns (Product) {}
  rpc UpdateProductImages(stream UpdateProductImagesRequest)
      returns (UpdateProductImagesResponse) {}
  rpc ValidateProductInventory(ValidateProductInventoryRequest)
      returns (ValidateProductInventoryResponse) {}
  rpc PlaceOrder(PlaceOrderRequest) returns (PlaceOrderResponse) {}
}

message Product {
  uint64 id = 1;
  string name = 2;
  float price = 3;
  uint64 inventory = 4;
  string description = 5;
  // @gotags: gorm:"type:varchar(255)[]"
  repeated string images = 6; // [bucketname]
  string stripe_price_id = 7;
  string stripe_product_id = 8;
  uint64 merchant_id = 9;
}

message UpdateProductImagesRequest {
  bytes image_data = 1;
  string filename = 2;
  uint64 id = 3;
}

message UpdateProductImagesResponse { repeated string uploaded_files = 1; }

message CreateProductRequest {
  string name = 1;
  float price = 2;
  uint64 inventory = 3;
  string description = 4;
  uint64 merchant_id = 5;
}

message UpdateProductRequest {
  uint64 id = 1;
  string name = 2;
  float price = 3;
  uint64 inventory = 4;
  string description = 5;
  repeated string images = 6;
  string stripe_price_id = 7;
  string stripe_product_id = 8;
  uint64 merchant_id = 9;
}

message DeleteProductRequest {
  uint64 id = 1;
  uint64 merchant_id = 2;
}

message ListProductsResponse {
  repeated Product products = 1;
  uint64 cursor = 2;
  uint64 total = 3;
}

message ListProductsRequest {
  uint64 cursor = 1;
  uint64 limit = 2;
  uint64 merchant_id = 3;
}
message GetProductRequest { uint64 id = 1; }

message ValidateProductInventoryRequest {
  uint64 product_id = 1;
  uint64 quantity = 2;
}

message ValidateProductInventoryResponse {
  bool valid = 1;
}

message PlaceOrderRequest {
  string session_id = 1;
  uint64 user_id = 2;
  string user_email = 3;
}

message PlaceOrderResponse {
  string checkout_url = 1;
}

// -----------------Order service-----------------

service OrderService {
  rpc GetOrder(GetOrderRequest) returns (Order) {}
  rpc GetOrdersByUser(GetOrdersByUserRequest) returns (GetOrdersResponse) {}
  rpc GetOrdersByMerchant(GetOrdersByMerchantRequest) returns (GetOrdersResponse) {}
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (Order) {}
  rpc CancelOrder(CancelOrderRequest) returns (Order) {}
  rpc DeleteOrder(DeleteOrderRequest) returns (Empty) {}
  rpc UpdatePaymentStatus(UpdatePaymentStatusRequest) returns (Empty) {}
}

message OrderItem {
  uint64 order_id = 1;
  uint64 product_id = 2;
  uint64 quantity = 3;
  float price = 4;
  string created_at = 5;
  string updated_at = 6;
}

// Enum for OrderStatus
enum OrderStatus {
    ORDER_STATUS_PROCESSING = 0; // Default value
    ORDER_STATUS_COMPLETED = 1;
    ORDER_STATUS_CANCELLED = 2;
}

// Enum for PaymentStatus
enum PaymentStatus {
    PAYMENT_STATUS_PENDING = 0; // Default value
    PAYMENT_STATUS_COMPLETED = 1;
    PAYMENT_STATUS_CANCELLED = 2;
}

message Order {
  uint64 id = 1;
  uint64 user_id = 2;
  float total = 3;
  OrderStatus status = 4;
  string transaction_id = 5;
  PaymentStatus payment_status = 6;
  repeated OrderItem order_items = 7;
  string created_at = 8;
  string updated_at = 9;
}

message GetOrderRequest {
  uint64 id = 1;
}

message GetOrdersByUserRequest {
  uint64 user_id = 1;
}

message GetOrdersByMerchantRequest {
  uint64 merchant_id = 1;
}

message GetOrdersResponse {
  repeated Order orders = 1;
}

message UpdateOrderStatusRequest {
  uint64 id = 1;
  string status = 2;
}

message CancelOrderRequest {
  uint64 id = 1;
}

message DeleteOrderRequest {
  uint64 id = 1;
}

message UpdatePaymentStatusRequest {
  string event = 1;
  uint64 orderId = 2;
}
